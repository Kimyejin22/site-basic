{"ast":null,"code":"var _jsxFileName = \"C:\\\\GongSite\\\\frontend\\\\src\\\\Page\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://api.bestimate.co.kr';\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const location = useLocation(); // 현재 URL 정보 사용\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${API_URL}/api/users/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        credentials: 'include' // 세션 또는 쿠키 공유 필요 시 추가\n      });\n      if (response.ok) {\n        var _data$user;\n        const data = await response.json();\n\n        // 응답 데이터 전체 확인\n        console.log('로그인 응답 데이터:', data);\n\n        // 데이터 구조에 맞게 수정: data.user.companyType 또는 data.companyType\n        const companyType = ((_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.companyType) || data.companyType;\n        console.log('CompanyType:', companyType); // companyType 콘솔에 출력\n\n        localStorage.setItem('token', data.token); // JWT 토큰을 로컬 스토리지에 저장\n\n        // 상위 컴포넌트로 로그인된 사용자 정보 전달\n        onLogin({\n          companyType\n        });\n        alert('Login successful!');\n        // URL에서 리다이렉션 대상 페이지 확인\n\n        const params = new URLSearchParams(location.search);\n        const redirectUrl = params.get('redirect') || '/'; // 리다이렉션 URL이 없으면 대시보드로 이동\n\n        window.location.href = redirectUrl;\n      } else {\n        alert('Login failed! Please check your credentials.');\n      }\n    } catch (err) {\n      alert('An error occurred: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => window.location.href = '/forgot-password',\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB098\\uC694?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"s1SXFG/TtTM6N/hAdLLKydSKkY0=\", false, function () {\n  return [useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useLocation","jsxDEV","_jsxDEV","API_URL","Login","onLogin","_s","email","setEmail","password","setPassword","location","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","credentials","ok","_data$user","data","json","console","log","companyType","user","localStorage","setItem","token","alert","params","URLSearchParams","search","redirectUrl","get","window","href","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/GongSite/frontend/src/Page/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst API_URL = 'http://api.bestimate.co.kr';\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const location = useLocation(); // 현재 URL 정보 사용\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/users/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n        credentials: 'include', // 세션 또는 쿠키 공유 필요 시 추가\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n\r\n        // 응답 데이터 전체 확인\r\n        console.log('로그인 응답 데이터:', data);\r\n  \r\n        // 데이터 구조에 맞게 수정: data.user.companyType 또는 data.companyType\r\n        const companyType = data.user?.companyType || data.companyType;\r\n  \r\n        console.log('CompanyType:', companyType);  // companyType 콘솔에 출력\r\n  \r\n        localStorage.setItem('token', data.token); // JWT 토큰을 로컬 스토리지에 저장\r\n  \r\n        // 상위 컴포넌트로 로그인된 사용자 정보 전달\r\n        onLogin({ companyType });\r\n\r\n        alert('Login successful!');\r\n        // URL에서 리다이렉션 대상 페이지 확인\r\n\r\n        const params = new URLSearchParams(location.search);\r\n        const redirectUrl = params.get('redirect') || '/'; // 리다이렉션 URL이 없으면 대시보드로 이동\r\n\r\n        window.location.href = redirectUrl;\r\n      } else {\r\n        alert('Login failed! Please check your credentials.');\r\n      }\r\n    } catch (err) {\r\n      alert('An error occurred: ' + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n        <button type=\"button\" onClick={() => window.location.href = '/forgot-password'}>\r\n          비밀번호를 잊으셨나요?\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}