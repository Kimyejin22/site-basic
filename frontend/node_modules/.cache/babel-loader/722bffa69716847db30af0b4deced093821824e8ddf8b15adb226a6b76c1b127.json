{"ast":null,"code":"var _jsxFileName = \"C:\\\\GongSite\\\\frontend\\\\src\\\\components\\\\MyPage\\\\MatchingManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatchingManagement = () => {\n  _s();\n  const [estimates, setEstimates] = useState([]);\n  const [loading, setLoading] = useState(true); // 로딩 상태\n  const [error, setError] = useState(null); // 에러 상태\n\n  useEffect(() => {\n    const fetchUserEstimates = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('로그인이 필요합니다.');\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch('http://api.bestimate.co.kr/api/estimates/user/me', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}` // JWT 토큰을 헤더에 추가\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setEstimates(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserEstimates();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC5D0\\uB7EC \\uBC1C\\uC0DD: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-estimates\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB0B4\\uAC00 \\uBCF4\\uB0B8 \\uACAC\\uC801 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), estimates.length ? estimates.map(estimate => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Post Title: \", estimate.post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Quantities: \", estimate.quantities]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prices: \", estimate.prices]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, estimate.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uBCF4\\uB0B8 \\uACAC\\uC801\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchingManagement, \"fvd5dEYSPIL5DnGXnTXlB/Yn9Hg=\");\n_c = MatchingManagement;\nexport default MatchingManagement;\nvar _c;\n$RefreshReg$(_c, \"MatchingManagement\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MatchingManagement","_s","estimates","setEstimates","loading","setLoading","error","setError","fetchUserEstimates","token","localStorage","getItem","response","fetch","method","headers","ok","Error","status","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","estimate","post","title","quantities","prices","id","_c","$RefreshReg$"],"sources":["C:/GongSite/frontend/src/components/MyPage/MatchingManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst MatchingManagement = () => {\r\n  const [estimates, setEstimates] = useState([]);\r\n  const [loading, setLoading] = useState(true); // 로딩 상태\r\n  const [error, setError] = useState(null); // 에러 상태\r\n\r\n  useEffect(() => {\r\n    const fetchUserEstimates = async () => {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        setError('로그인이 필요합니다.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch('http://api.bestimate.co.kr/api/estimates/user/me', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`, // JWT 토큰을 헤더에 추가\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setEstimates(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserEstimates();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>로딩 중...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>에러 발생: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-estimates\">\r\n      <h1>내가 보낸 견적 목록</h1>\r\n      {estimates.length ? (\r\n        estimates.map((estimate) => (\r\n          <div key={estimate.id}>\r\n            <h2>Post Title: {estimate.post.title}</h2>\r\n            <p>Quantities: {estimate.quantities}</p>\r\n            <p>Prices: {estimate.prices}</p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>보낸 견적이 없습니다.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchingManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}