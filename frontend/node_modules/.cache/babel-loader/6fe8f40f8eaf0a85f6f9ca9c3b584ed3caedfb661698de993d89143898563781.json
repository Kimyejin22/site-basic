{"ast":null,"code":"var _jsxFileName = \"C:\\\\GongSite\\\\frontend\\\\src\\\\components\\\\MyPage\\\\MatchingManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://api.bestimate.co.kr';\nconst MatchingManagement = () => {\n  _s();\n  const [companyType, setCompanyType] = useState('');\n  const [estimates, setEstimates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // 로그인한 사용자 정보를 가져오는 함수\n    const fetchUserInfo = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('로그인이 필요합니다.');\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch(`${API_URL}/api/me`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}` // JWT 토큰을 헤더에 추가\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCompanyType(data.user.companyType); // companyType 설정\n        console.log('User data:', data); // 디버깅용 로그\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  useEffect(() => {\n    const fetchEstimates = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('로그인이 필요합니다.');\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch(`${API_URL}/api/estimates/user`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}` // JWT 토큰을 헤더에 추가\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setEstimates(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (companyType === '공장') {\n      fetchEstimates();\n    }\n  }, [companyType]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC5D0\\uB7EC \\uBC1C\\uC0DD: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB9E4\\uCE6D \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), companyType === '공장' ? estimates.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD604\\uC7AC \\uBCF4\\uB0B8 \\uACAC\\uC801\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: estimates.map(estimate => {\n        var _estimate$post, _estimate$post2, _estimate$user;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"estimate-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uB9E4\\uCE6D\\uB41C \\uC758\\uB8B0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uC81C\\uBAA9:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 20\n            }, this), \" \", ((_estimate$post = estimate.post) === null || _estimate$post === void 0 ? void 0 : _estimate$post.title) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uB0B4\\uC6A9:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 20\n            }, this), \" \", ((_estimate$post2 = estimate.post) === null || _estimate$post2 === void 0 ? void 0 : _estimate$post2.content) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uBCF4\\uB0B8 \\uACAC\\uC801 \\uC218\\uB7C9:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 20\n            }, this), \" \", estimate.quantities]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uBCF4\\uB0B8 \\uACAC\\uC801 \\uAC00\\uACA9:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 20\n            }, this), \" \", estimate.prices]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uC791\\uC131\\uC790 \\uC774\\uBA54\\uC77C:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 20\n            }, this), \" \", ((_estimate$user = estimate.user) === null || _estimate$user === void 0 ? void 0 : _estimate$user.email) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, estimate.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD574\\uB2F9\\uC0AC\\uD56D \\uC5C6\\uC74C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchingManagement, \"5SDOpme6gpGwlK3Y7363FSIX68o=\");\n_c = MatchingManagement;\nexport default MatchingManagement;\nvar _c;\n$RefreshReg$(_c, \"MatchingManagement\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","API_URL","MatchingManagement","_s","companyType","setCompanyType","estimates","setEstimates","loading","setLoading","error","setError","fetchUserInfo","token","localStorage","getItem","response","fetch","method","headers","ok","Error","status","data","json","user","console","log","err","message","fetchEstimates","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","estimate","_estimate$post","_estimate$post2","_estimate$user","className","post","title","content","quantities","prices","email","id","_c","$RefreshReg$"],"sources":["C:/GongSite/frontend/src/components/MyPage/MatchingManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst API_URL = 'http://api.bestimate.co.kr';\r\n\r\nconst MatchingManagement = () => {\r\n  const [companyType, setCompanyType] = useState('');\r\n  const [estimates, setEstimates] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 로그인한 사용자 정보를 가져오는 함수\r\n    const fetchUserInfo = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setError('로그인이 필요합니다.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/me`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`, // JWT 토큰을 헤더에 추가\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setCompanyType(data.user.companyType);  // companyType 설정\r\n        console.log('User data:', data);  // 디버깅용 로그\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserInfo();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchEstimates = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setError('로그인이 필요합니다.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/estimates/user`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`, // JWT 토큰을 헤더에 추가\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setEstimates(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (companyType === '공장') {\r\n      fetchEstimates();\r\n    }\r\n  }, [companyType]);\r\n\r\n  if (loading) {\r\n    return <p>로딩 중...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>에러 발생: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>매칭 관리</h1>\r\n      {companyType === '공장' ? (\r\n        estimates.length === 0 ? (\r\n          <p>현재 보낸 견적이 없습니다.</p>\r\n        ) : (\r\n          <div>\r\n            {estimates.map((estimate) => (\r\n              <div key={estimate.id} className=\"estimate-item\">\r\n                <h3>매칭된 의뢰</h3>\r\n                <p><strong>제목:</strong> {estimate.post?.title || 'N/A'}</p>\r\n                <p><strong>내용:</strong> {estimate.post?.content || 'N/A'}</p>\r\n                <p><strong>보낸 견적 수량:</strong> {estimate.quantities}</p>\r\n                <p><strong>보낸 견적 가격:</strong> {estimate.prices}</p>\r\n                <p><strong>작성자 이메일:</strong> {estimate.user?.email || 'N/A'}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )\r\n      ) : (\r\n        <p>해당사항 없음</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchingManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}