{"ast":null,"code":"var _jsxFileName = \"C:\\\\GongSite\\\\frontend\\\\src\\\\Page\\\\RequestDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport RequestDetail from '../components/RequestDetail/RequestDetail.js';\nimport NDA from '../components/RequestDetail/NDA.js';\nimport EstimateForm from '../components/RequestDetail/EstimateForm.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://api.bestimate.co.kr';\nconst RequestDetailPage = ({\n  onBack\n}) => {\n  _s();\n  var _user$user, _user$user$companyTyp;\n  const {\n    id\n  } = useParams(); // URL에서 요청 ID를 추출\n  const [request, setRequest] = useState(null);\n  const [loading, setLoading] = useState(true); // 로딩 상태 추가\n  const [user, setUser] = useState(null); // user 상태 추가\n  const navigate = useNavigate();\n\n  // localStorage에서 user 정보를 불러와 상태에 저장\n  useEffect(() => {\n    const loginData = localStorage.getItem('loginData');\n    if (loginData) {\n      const parsedUser = JSON.parse(loginData);\n      setUser(parsedUser);\n      console.log('Restored user from localStorage:', parsedUser); // 콘솔에 user 객체 출력\n    } else {\n      console.error('localStorage에 loginData가 없습니다.');\n    }\n  }, []);\n  ;\n  const [showEstimateForm, setShowEstimateForm] = useState(false);\n\n  // companyType을 이용한 조건부 렌더링\n  const isFactory = (user === null || user === void 0 ? void 0 : (_user$user = user.user) === null || _user$user === void 0 ? void 0 : (_user$user$companyTyp = _user$user.companyType) === null || _user$user$companyTyp === void 0 ? void 0 : _user$user$companyTyp.trim()) === '공장'; // 공백이 있거나 대소문자 문제 방지\n\n  useEffect(() => {\n    const fetchRequestDetail = async () => {\n      try {\n        const response = await fetch(`${API_URL}/api/posts/${id}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setRequest(data); // 요청 데이터를 상태에 저장\n      } catch (err) {\n        console.error(\"Failed to fetch request detail\", err);\n      } finally {\n        setLoading(false); // 로딩 완료\n      }\n    };\n    fetchRequestDetail();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this); // 데이터를 로딩 중일 때 표시\n  }\n  if (!request) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"request-detail-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC120\\uD0DD\\uB41C \\uC694\\uCCAD\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        children: \"\\uB4A4\\uB85C \\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"request-detail-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      className: \"back-button\",\n      children: \"\\uB4A4\\uB85C \\uAC00\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RequestDetail, {\n      request: request\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NDA, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), isFactory ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(`/estimate/${request.id}`),\n      className: \"estimate-button\",\n      children: \"\\uACAC\\uC801 \\uC81C\\uC548\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD574\\uB2F9 \\uD68C\\uC0AC\\uB294 \\uACF5\\uC7A5\\uC774 \\uC544\\uB2D9\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(RequestDetailPage, \"bQ6wjGsy1iibCfaYTTD71dqqFGw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RequestDetailPage;\nexport default RequestDetailPage;\nvar _c;\n$RefreshReg$(_c, \"RequestDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","RequestDetail","NDA","EstimateForm","jsxDEV","_jsxDEV","API_URL","RequestDetailPage","onBack","_s","_user$user","_user$user$companyTyp","id","request","setRequest","loading","setLoading","user","setUser","navigate","loginData","localStorage","getItem","parsedUser","JSON","parse","console","log","error","showEstimateForm","setShowEstimateForm","isFactory","companyType","trim","fetchRequestDetail","response","fetch","ok","Error","status","data","json","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/GongSite/frontend/src/Page/RequestDetailPage.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport RequestDetail from '../components/RequestDetail/RequestDetail.js';\r\nimport NDA from '../components/RequestDetail/NDA.js';\r\nimport EstimateForm from '../components/RequestDetail/EstimateForm.js';\r\n\r\nconst API_URL = 'http://api.bestimate.co.kr';\r\n\r\nconst RequestDetailPage = ({ onBack }) => {\r\n  const { id } = useParams(); // URL에서 요청 ID를 추출\r\n  const [request, setRequest] = useState(null);\r\n  const [loading, setLoading] = useState(true); // 로딩 상태 추가\r\n  const [user, setUser] = useState(null); // user 상태 추가\r\n  const navigate = useNavigate();\r\n\r\n  // localStorage에서 user 정보를 불러와 상태에 저장\r\n  useEffect(() => {\r\n    const loginData = localStorage.getItem('loginData');\r\n    if (loginData) {\r\n      const parsedUser = JSON.parse(loginData);\r\n      setUser(parsedUser);\r\n      console.log('Restored user from localStorage:', parsedUser); // 콘솔에 user 객체 출력\r\n    } else {\r\n      console.error('localStorage에 loginData가 없습니다.');\r\n    }\r\n  }, []);;\r\n\r\n  const [showEstimateForm, setShowEstimateForm] = useState(false);\r\n\r\n    // companyType을 이용한 조건부 렌더링\r\n    const isFactory = user?.user?.companyType?.trim() === '공장'; // 공백이 있거나 대소문자 문제 방지\r\n\r\n    useEffect(() => {\r\n      const fetchRequestDetail = async () => {\r\n        try {\r\n          const response = await fetch(`${API_URL}/api/posts/${id}`);\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          const data = await response.json();\r\n          setRequest(data); // 요청 데이터를 상태에 저장\r\n        } catch (err) {\r\n          console.error(\"Failed to fetch request detail\", err);\r\n        } finally {\r\n          setLoading(false); // 로딩 완료\r\n        }\r\n      };\r\n  \r\n      fetchRequestDetail();\r\n    }, [id]);\r\n\r\n\r\n  if (loading) {\r\n    return <div>로딩 중...</div>; // 데이터를 로딩 중일 때 표시\r\n  }\r\n\r\n  if (!request) {\r\n    return (\r\n      <div className=\"request-detail-page\">\r\n        <p>선택된 요청이 없습니다.</p>\r\n        <button onClick={onBack}>뒤로 가기</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"request-detail-page\">\r\n      <button onClick={onBack} className=\"back-button\">뒤로 가기</button>\r\n      <RequestDetail request={request} />\r\n      <NDA />\r\n      {/* isFactory가 true일 때만 버튼을 렌더링 */}\r\n      {isFactory ? (\r\n        <button onClick={() => navigate(`/estimate/${request.id}`)} className=\"estimate-button\">\r\n          견적 제안하기\r\n        </button>\r\n      ) : (\r\n        <p>해당 회사는 공장이 아닙니다.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RequestDetailPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}