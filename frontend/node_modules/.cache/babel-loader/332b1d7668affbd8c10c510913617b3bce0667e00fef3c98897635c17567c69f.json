{"ast":null,"code":"var _jsxFileName = \"C:\\\\GongSite\\\\frontend\\\\src\\\\components\\\\RequestDetail\\\\EstimateForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://api.bestimate.co.kr';\nconst EstimateForm = ({\n  request\n}) => {\n  _s();\n  const [quantities, setQuantities] = useState([]);\n  const [prices, setPrices] = useState([]);\n  const [message, setMessage] = useState(''); // 서버 응답 메시지\n\n  // 수량/단가 추가 버튼 클릭 시\n  const handleAddRow = () => {\n    setQuantities([...quantities, '']);\n    setPrices([...prices, '']);\n  };\n\n  // 수량 입력 변경 핸들러\n  const handleQuantityChange = (index, value) => {\n    const updatedQuantities = [...quantities];\n    updatedQuantities[index] = value;\n    setQuantities(updatedQuantities);\n  };\n\n  // 단가 입력 변경 핸들러\n  const handlePriceChange = (index, value) => {\n    const updatedPrices = [...prices];\n    updatedPrices[index] = value;\n    setPrices(updatedPrices);\n  };\n\n  // 서버에 데이터 전송 (견적 제출)\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const token = localStorage.getItem('token'); // 저장된 JWT 토큰\n\n    console.log(localStorage.getItem('token'));\n\n    // 토큰이 없을 경우 처리\n    if (!token) {\n      setMessage('로그인이 필요합니다.');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/api/estimates`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // 토큰을 헤더에 추가\n        },\n        credentials: 'include',\n        // 자격 증명 포함\n        body: JSON.stringify({\n          postId: request.id,\n          quantities,\n          prices\n        })\n      });\n\n      // 서버 응답 처리\n      if (response.ok) {\n        const data = await response.json();\n        setMessage('견적이 성공적으로 제출되었습니다.');\n        console.log('서버 응답:', data);\n      } else {\n        const errorData = await response.json();\n        setMessage(`견적 제출 실패: ${errorData.error}`);\n        console.error('견적 제출 실패:', errorData);\n      }\n    } catch (err) {\n      console.error('서버 오류:', err);\n      setMessage('서버 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"estimate-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uACAC\\uC801 \\uC81C\\uC548\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), quantities.map((quantity, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"estimate-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: quantity,\n        onChange: e => handleQuantityChange(index, e.target.value),\n        placeholder: \"\\uC218\\uB7C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: prices[index],\n        onChange: e => handlePriceChange(index, e.target.value),\n        placeholder: \"\\uB2E8\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddRow,\n      children: \"\\uC218\\uB7C9/\\uB2E8\\uAC00 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uACAC\\uC801 \\uBCF4\\uB0B4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(EstimateForm, \"XK3Tjlv2XyGmdrhQvIJHIG7SPe8=\");\n_c = EstimateForm;\nexport default EstimateForm;\nvar _c;\n$RefreshReg$(_c, \"EstimateForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_URL","EstimateForm","request","_s","quantities","setQuantities","prices","setPrices","message","setMessage","handleAddRow","handleQuantityChange","index","value","updatedQuantities","handlePriceChange","updatedPrices","handleSubmit","event","preventDefault","token","localStorage","getItem","console","log","response","fetch","method","headers","credentials","body","JSON","stringify","postId","id","ok","data","json","errorData","error","err","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","quantity","type","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/GongSite/frontend/src/components/RequestDetail/EstimateForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst API_URL = 'http://api.bestimate.co.kr';\r\n\r\nconst EstimateForm = ({ request }) => {\r\n  const [quantities, setQuantities] = useState([]);\r\n  const [prices, setPrices] = useState([]);\r\n  const [message, setMessage] = useState(''); // 서버 응답 메시지\r\n\r\n  // 수량/단가 추가 버튼 클릭 시\r\n  const handleAddRow = () => {\r\n    setQuantities([...quantities, '']);\r\n    setPrices([...prices, '']);\r\n  };\r\n\r\n  // 수량 입력 변경 핸들러\r\n  const handleQuantityChange = (index, value) => {\r\n    const updatedQuantities = [...quantities];\r\n    updatedQuantities[index] = value;\r\n    setQuantities(updatedQuantities);\r\n  };\r\n\r\n  // 단가 입력 변경 핸들러\r\n  const handlePriceChange = (index, value) => {\r\n    const updatedPrices = [...prices];\r\n    updatedPrices[index] = value;\r\n    setPrices(updatedPrices);\r\n  };\r\n\r\n  // 서버에 데이터 전송 (견적 제출)\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    const token = localStorage.getItem('token'); // 저장된 JWT 토큰\r\n\r\n    console.log(localStorage.getItem('token'));\r\n\r\n    // 토큰이 없을 경우 처리\r\n    if (!token) {\r\n      setMessage('로그인이 필요합니다.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/estimates`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`, // 토큰을 헤더에 추가\r\n        },\r\n        credentials: 'include', // 자격 증명 포함\r\n        body: JSON.stringify({\r\n          postId: request.id,\r\n          quantities,\r\n          prices,\r\n        }),\r\n      });\r\n\r\n      // 서버 응답 처리\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setMessage('견적이 성공적으로 제출되었습니다.');\r\n        console.log('서버 응답:', data);\r\n      } else {\r\n        const errorData = await response.json();\r\n        setMessage(`견적 제출 실패: ${errorData.error}`);\r\n        console.error('견적 제출 실패:', errorData);\r\n      }\r\n    } catch (err) {\r\n      console.error('서버 오류:', err);\r\n      setMessage('서버 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"estimate-form\">\r\n      <h3>견적 제안하기</h3>\r\n      {quantities.map((quantity, index) => (\r\n        <div key={index} className=\"estimate-row\">\r\n          <input\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={(e) => handleQuantityChange(index, e.target.value)}\r\n            placeholder=\"수량\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            value={prices[index]}\r\n            onChange={(e) => handlePriceChange(index, e.target.value)}\r\n            placeholder=\"단가\"\r\n          />\r\n        </div>\r\n      ))}\r\n      <button type=\"button\" onClick={handleAddRow}>\r\n        수량/단가 추가\r\n      </button>\r\n      <button type=\"submit\">견적 보내기</button>\r\n      {/* 서버 응답 메시지 표시 */}\r\n      {message && <p>{message}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EstimateForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}