{"ast":null,"code":"var _jsxFileName = \"C:\\\\GongSite\\\\frontend\\\\src\\\\Page\\\\Register\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CompanySearchModal from '../../components/Register/CompanySearchModal.js';\n\n// API BASE URL 설정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://api.bestimate.co.kr';\nconst Register = () => {\n  _s();\n  const [companyType, setCompanyType] = useState('의뢰사');\n  const [businessNumber, setBusinessNumber] = useState('');\n  const [companyName, setCompanyName] = useState(''); // 회사 이름 상태 추가\n  const [ceo, setCeo] = useState(''); // 대표자 상태 추가\n  const [address, setAddress] = useState(''); // 주소 상태 추가\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const [emailSent, setEmailSent] = useState(false);\n  const [verificationCode, setVerificationCode] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [isEmailVerified, setIsEmailVerified] = useState(false); // 이메일 인증 상태 추가\n\n  const handleCompanyTypeChange = type => {\n    setCompanyType(type);\n  };\n  const handleBusinessNumberSearch = () => {\n    setShowModal(true);\n  };\n  const handleCompanySelect = company => {\n    setBusinessNumber(company.businessNumber); // 선택된 기업의 사업자 등록번호 반영\n    setCompanyName(company.companyName); // 회사 이름 설정\n    setCeo(company.ceo); // 대표자 설정\n    setAddress(company.address); // 주소 설정\n  };\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  // 이메일 인증 코드 전송\n  const handleEmailSend = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/users/send-verification-code`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // 세션 쿠키를 포함하도록 설정\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        alert('Verification code sent to your email.');\n        setEmailSent(true);\n      } else {\n        alert('Failed to send verification code.');\n      }\n    } catch (err) {\n      alert('An error occurred: ' + err.message);\n    }\n  };\n\n  // 이메일 인증 코드 확인\n  const handleVerificationCodeSubmit = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/users/verify-code`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // 세션 쿠키를 포함하도록 설정\n        body: JSON.stringify({\n          email,\n          code: verificationCode\n        })\n      });\n      if (response.ok) {\n        alert('Email verified successfully!');\n        setIsEmailVerified(true); // 이메일 인증 상태 업데이트\n      } else {\n        alert('Invalid verification code.');\n      }\n    } catch (err) {\n      alert('An error occurred: ' + err.message);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isEmailVerified) {\n      alert('Please verify your email before submitting.');\n      return;\n    }\n    try {\n      // 1. 회사 정보 등록\n      let companyResponse = await fetch(`${API_BASE_URL}/api/companies`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // 세션 쿠키를 포함하도록 설정\n        body: JSON.stringify({\n          companyName,\n          businessNumber,\n          ceo,\n          address\n        })\n      });\n      if (!companyResponse.ok) {\n        throw new Error('Failed to register company');\n      }\n      const companyData = await companyResponse.json();\n\n      // 2. 사용자 정보 등록\n      const userResponse = await fetch(`${API_BASE_URL}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // 세션 쿠키를 포함하도록 설정\n        body: JSON.stringify({\n          companyType,\n          email,\n          password,\n          termsAccepted,\n          companyId: companyData.id,\n          businessNumber\n        })\n      });\n      const userData = await userResponse.json();\n      if (userResponse.ok) {\n        alert('Registration successful!');\n        window.location.href = '/login';\n      } else {\n        alert('Registration failed: ' + userData.message);\n      }\n    } catch (err) {\n      alert('An error occurred: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uAE30\\uC5C5 \\uC720\\uD615\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: companyType === '의뢰사' ? 'selected' : '',\n            onClick: () => handleCompanyTypeChange('의뢰사'),\n            children: \"\\uC758\\uB8B0\\uC0AC\\uB85C \\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: companyType === '공장' ? 'selected' : '',\n            onClick: () => handleCompanyTypeChange('공장'),\n            children: \"\\uACF5\\uC7A5\\uC73C\\uB85C \\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"businessNumber\",\n          children: \"\\uC0AC\\uC5C5\\uC790\\uB4F1\\uB85D\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"businessNumber\",\n          value: businessNumber,\n          onChange: e => setBusinessNumber(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleBusinessNumberSearch,\n          children: \"\\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), companyName && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"companyName\",\n          children: \"\\uAE30\\uC5C5\\uBA85\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"companyName\",\n          value: companyName,\n          onChange: e => setCompanyName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), ceo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ceo\",\n          children: \"\\uB300\\uD45C\\uC790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ceo\",\n          value: ceo,\n          onChange: e => setCeo(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), address && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"\\uC8FC\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleEmailSend,\n          children: \"\\uC778\\uC99D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), emailSent && !isEmailVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"verificationCode\",\n          children: \"\\uC778\\uC99D\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"verificationCode\",\n          value: verificationCode,\n          onChange: e => setVerificationCode(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleVerificationCodeSubmit,\n          children: \"\\uC778\\uC99D \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"termsAccepted\",\n          checked: termsAccepted,\n          onChange: e => setTermsAccepted(e.target.checked),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"termsAccepted\",\n          children: \"\\uC774\\uC6A9\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {/* 이용약관 모달 띄우기 */},\n          children: \"\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"register-button\",\n        disabled: !isEmailVerified,\n        children: \"\\uAC00\\uC785 \\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(CompanySearchModal, {\n      onClose: handleModalClose,\n      onSelect: handleCompanySelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"v+OdzZ7wzqKzKfuo2LtZmbuth6M=\");\n_c = Register;\nexport default Register;\n\n// import React, { useState } from 'react';\n// import CompanySearchModal from '../../components/Register/CompanySearchModal.js';\n\n// // API BASE URL 설정\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://api.bestimate.co.kr';\n\n// const Register = () => {\n//   const [companyType, setCompanyType] = useState('의뢰사');\n//   const [businessNumber, setBusinessNumber] = useState('');\n//   const [companyName, setCompanyName] = useState('');\n//   const [ceo, setCeo] = useState('');\n//   const [address, setAddress] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [termsAccepted, setTermsAccepted] = useState(false);\n//   const [showModal, setShowModal] = useState(false); // 모달 상태 추가\n\n//   const handleCompanyTypeChange = (type) => {\n//     setCompanyType(type);\n//   };\n\n//   const handleBusinessNumberSearch = () => {\n//     setShowModal(true); // 모달 열기\n//   };\n\n//   const handleCompanySelect = (company) => {\n//     setBusinessNumber(company.businessNumber);\n//     setCompanyName(company.companyName);\n//     setCeo(company.ceo);\n//     setAddress(company.address);\n//     setShowModal(false); // 모달 닫기\n//   };\n\n//   const handleModalClose = () => {\n//     setShowModal(false); // 모달 닫기\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       // Step 1: 회사 등록 API 호출\n//       const companyResponse = await fetch(`${API_BASE_URL}/api/companies`, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         credentials: 'include',\n//         body: JSON.stringify({ companyName, businessNumber, ceo, address }),\n//       });\n\n//       if (!companyResponse.ok) {\n//         const errorData = await companyResponse.json();\n//         throw new Error('회사 등록 실패: ' + (errorData.message || '알 수 없는 오류'));\n//       }\n\n//       const companyData = await companyResponse.json();\n\n//       // Step 2: 회사 등록 성공 후 유저 등록 API 호출\n//       const userResponse = await fetch(`${API_BASE_URL}/api/users/register`, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         credentials: 'include',\n//         body: JSON.stringify({\n//           companyType,\n//           email,\n//           password,\n//           termsAccepted,\n//           companyId: companyData.id,\n//           businessNumber,\n//         }),\n//       });\n\n//       const userData = await userResponse.json();\n\n//       if (userResponse.ok) {\n//         alert('회원가입 성공!');\n//         window.location.href = '/login'; // 성공 시 로그인 페이지로 리디렉션\n//       } else {\n//         alert('회원가입 실패: ' + (userData.message || '알 수 없는 오류'));\n//       }\n//     } catch (err) {\n//       alert('오류가 발생했습니다: ' + err.message);\n//     }\n//   };\n\n//   // const handleSubmit = async (e) => {\n//   //   e.preventDefault();\n//   //   try {\n//   //     let companyResponse = await fetch(`${API_BASE_URL}/api/companies`, {\n//   //       method: 'POST',\n//   //       headers: { 'Content-Type': 'application/json' },\n//   //       credentials: 'include',\n//   //       body: JSON.stringify({ companyName, businessNumber, ceo, address }),\n//   //     });\n\n//   //     if (!companyResponse.ok) {\n//   //       throw new Error('Failed to register company');\n//   //     }\n\n//   //     const companyData = await companyResponse.json();\n\n//   //     const userResponse = await fetch(`${API_BASE_URL}/api/users/register`, {\n//   //       method: 'POST',\n//   //       headers: { 'Content-Type': 'application/json' },\n//   //       credentials: 'include',\n//   //       body: JSON.stringify({ companyType, email, password, termsAccepted, companyId: companyData.id, businessNumber }),\n//   //     });\n\n//   //     const userData = await userResponse.json();\n\n//   //     if (userResponse.ok) {\n//   //       alert('Registration successful!');\n//   //       window.location.href = '/login';\n//   //     } else {\n//   //       alert('Registration failed: ' + userData.message);\n//   //     }\n//   //   } catch (err) {\n//   //     alert('An error occurred: ' + err.message);\n//   //   }\n//   // };\n\n//   return (\n//     <div className=\"register-container\">\n//       <h1>회원가입</h1>\n//       <form onSubmit={handleSubmit} className=\"register-form\">\n//         {/* 기업 유형 선택 */}\n//         <div className=\"form-group\">\n//           <label>기업 유형</label>\n//           <div>\n//             <button\n//               type=\"button\"\n//               className={companyType === '의뢰사' ? 'selected' : ''}\n//               onClick={() => handleCompanyTypeChange('의뢰사')}\n//             >\n//               의뢰사로 가입\n//             </button>\n//             <button\n//               type=\"button\"\n//               className={companyType === '공장' ? 'selected' : ''}\n//               onClick={() => handleCompanyTypeChange('공장')}\n//             >\n//               공장으로 가입\n//             </button>\n//           </div>\n//         </div>\n\n//         {/* 사업자등록번호 검색 */}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"businessNumber\">사업자등록번호</label>\n//           <input\n//             type=\"text\"\n//             id=\"businessNumber\"\n//             value={businessNumber}\n//             onChange={(e) => setBusinessNumber(e.target.value)}\n//             required\n//           />\n//           <button type=\"button\" onClick={handleBusinessNumberSearch}>\n//             검색\n//           </button>\n//         </div>\n\n//         {/* 모달 상태에 따라 모달 표시 */}\n//         {showModal && (\n//           <CompanySearchModal\n//             onClose={handleModalClose}\n//             onSelect={handleCompanySelect}\n//           />\n//         )}\n\n//         {/* 회사 이름, 대표자, 주소 */}\n//         {companyName && (\n//           <div className=\"form-group\">\n//             <label htmlFor=\"companyName\">기업명</label>\n//             <input\n//               type=\"text\"\n//               id=\"companyName\"\n//               value={companyName}\n//               onChange={(e) => setCompanyName(e.target.value)}\n//               required\n//             />\n//           </div>\n//         )}\n\n//         {ceo && (\n//           <div className=\"form-group\">\n//             <label htmlFor=\"ceo\">대표자</label>\n//             <input\n//               type=\"text\"\n//               id=\"ceo\"\n//               value={ceo}\n//               onChange={(e) => setCeo(e.target.value)}\n//               required\n//             />\n//           </div>\n//         )}\n\n//         {address && (\n//           <div className=\"form-group\">\n//             <label htmlFor=\"address\">주소</label>\n//             <input\n//               type=\"text\"\n//               id=\"address\"\n//               value={address}\n//               onChange={(e) => setAddress(e.target.value)}\n//               required\n//             />\n//           </div>\n//         )}\n\n//         {/* 이메일, 비밀번호 */}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">이메일</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password\">비밀번호</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         {/* 약관 동의 */}\n//         <div className=\"form-group\">\n//           <input\n//             type=\"checkbox\"\n//             id=\"termsAccepted\"\n//             checked={termsAccepted}\n//             onChange={(e) => setTermsAccepted(e.target.checked)}\n//             required\n//           />\n//           <label htmlFor=\"termsAccepted\">이용약관에 동의합니다.</label>\n//         </div>\n\n//         <button type=\"submit\" className=\"register-button\">\n//           가입 완료\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","CompanySearchModal","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","Register","_s","companyType","setCompanyType","businessNumber","setBusinessNumber","companyName","setCompanyName","ceo","setCeo","address","setAddress","email","setEmail","password","setPassword","termsAccepted","setTermsAccepted","emailSent","setEmailSent","verificationCode","setVerificationCode","showModal","setShowModal","isEmailVerified","setIsEmailVerified","handleCompanyTypeChange","type","handleBusinessNumberSearch","handleCompanySelect","company","handleModalClose","handleEmailSend","response","fetch","method","headers","credentials","body","JSON","stringify","ok","alert","err","message","handleVerificationCodeSubmit","code","handleSubmit","e","preventDefault","companyResponse","Error","companyData","json","userResponse","companyId","id","userData","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","htmlFor","value","onChange","target","required","checked","disabled","onClose","onSelect","_c","$RefreshReg$"],"sources":["C:/GongSite/frontend/src/Page/Register/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CompanySearchModal from '../../components/Register/CompanySearchModal.js';\r\n\r\n// API BASE URL 설정\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://api.bestimate.co.kr';\r\n\r\nconst Register = () => {\r\n  const [companyType, setCompanyType] = useState('의뢰사');\r\n  const [businessNumber, setBusinessNumber] = useState('');\r\n  const [companyName, setCompanyName] = useState(''); // 회사 이름 상태 추가\r\n  const [ceo, setCeo] = useState(''); // 대표자 상태 추가\r\n  const [address, setAddress] = useState(''); // 주소 상태 추가\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [termsAccepted, setTermsAccepted] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isEmailVerified, setIsEmailVerified] = useState(false); // 이메일 인증 상태 추가\r\n\r\n  const handleCompanyTypeChange = (type) => {\r\n    setCompanyType(type);\r\n  };\r\n\r\n  const handleBusinessNumberSearch = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCompanySelect = (company) => {\r\n    setBusinessNumber(company.businessNumber); // 선택된 기업의 사업자 등록번호 반영\r\n    setCompanyName(company.companyName); // 회사 이름 설정\r\n    setCeo(company.ceo); // 대표자 설정\r\n    setAddress(company.address); // 주소 설정\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  // 이메일 인증 코드 전송\r\n  const handleEmailSend = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/users/send-verification-code`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        credentials: 'include',  // 세션 쿠키를 포함하도록 설정\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Verification code sent to your email.');\r\n        setEmailSent(true);\r\n      } else {\r\n        alert('Failed to send verification code.');\r\n      }\r\n    } catch (err) {\r\n      alert('An error occurred: ' + err.message);\r\n    }\r\n  };\r\n\r\n  // 이메일 인증 코드 확인\r\n  const handleVerificationCodeSubmit = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/users/verify-code`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        credentials: 'include',  // 세션 쿠키를 포함하도록 설정\r\n        body: JSON.stringify({ email, code: verificationCode }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Email verified successfully!');\r\n        setIsEmailVerified(true); // 이메일 인증 상태 업데이트\r\n      } else {\r\n        alert('Invalid verification code.');\r\n      }\r\n    } catch (err) {\r\n      alert('An error occurred: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isEmailVerified) {\r\n      alert('Please verify your email before submitting.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n    // 1. 회사 정보 등록\r\n    let companyResponse = await fetch(`${API_BASE_URL}/api/companies`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      credentials: 'include',  // 세션 쿠키를 포함하도록 설정\r\n      body: JSON.stringify({ companyName, businessNumber, ceo, address }),\r\n    });\r\n\r\n    if (!companyResponse.ok) {\r\n      throw new Error('Failed to register company');\r\n    }\r\n\r\n    const companyData = await companyResponse.json();\r\n\r\n    // 2. 사용자 정보 등록\r\n    const userResponse = await fetch(`${API_BASE_URL}/api/users/register`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      credentials: 'include',  // 세션 쿠키를 포함하도록 설정\r\n      body: JSON.stringify({ companyType, email, password, termsAccepted, companyId: companyData.id, businessNumber }),\r\n    });\r\n\r\n    const userData = await userResponse.json();\r\n\r\n    if (userResponse.ok) {\r\n      alert('Registration successful!');\r\n      window.location.href = '/login';\r\n    } else {\r\n      alert('Registration failed: ' + userData.message);\r\n    }\r\n    } catch (err) {\r\n    alert('An error occurred: ' + err.message);\r\n    }\r\n    };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h1>회원가입</h1>\r\n      <form onSubmit={handleSubmit} className=\"register-form\">\r\n        <div className=\"form-group\">\r\n          <label>기업 유형</label>\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              className={companyType === '의뢰사' ? 'selected' : ''}\r\n              onClick={() => handleCompanyTypeChange('의뢰사')}\r\n            >\r\n              의뢰사로 가입\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={companyType === '공장' ? 'selected' : ''}\r\n              onClick={() => handleCompanyTypeChange('공장')}\r\n            >\r\n              공장으로 가입\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"businessNumber\">사업자등록번호</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"businessNumber\"\r\n            value={businessNumber}\r\n            onChange={(e) => setBusinessNumber(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"button\" onClick={handleBusinessNumberSearch}>\r\n            검색\r\n          </button>\r\n        </div>\r\n\r\n          {/* 회사 이름, 대표자, 주소 입력 필드 */}\r\n          {companyName && (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"companyName\">기업명</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"companyName\"\r\n                value={companyName}\r\n                onChange={(e) => setCompanyName(e.target.value)}\r\n                required\r\n              />\r\n        </div>\r\n        )}\r\n\r\n        {ceo && (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"ceo\">대표자</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"ceo\"\r\n              value={ceo}\r\n              onChange={(e) => setCeo(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {address && (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"address\">주소</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">이메일</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"button\" onClick={handleEmailSend}>\r\n            인증\r\n          </button>\r\n        </div>\r\n\r\n        {emailSent && !isEmailVerified && (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"verificationCode\">인증번호</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"verificationCode\"\r\n              value={verificationCode}\r\n              onChange={(e) => setVerificationCode(e.target.value)}\r\n              required\r\n            />\r\n            <button type=\"button\" onClick={handleVerificationCodeSubmit}>\r\n              인증 확인\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">비밀번호</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"termsAccepted\"\r\n            checked={termsAccepted}\r\n            onChange={(e) => setTermsAccepted(e.target.checked)}\r\n            required\r\n          />\r\n          <label htmlFor=\"termsAccepted\">이용약관에 동의합니다.</label>\r\n          <button type=\"button\" onClick={() => {/* 이용약관 모달 띄우기 */}}>보기</button>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"register-button\" disabled={!isEmailVerified}>\r\n          가입 완료\r\n        </button>\r\n      </form>\r\n\r\n      {showModal && (\r\n        <CompanySearchModal\r\n          onClose={handleModalClose}\r\n          onSelect={handleCompanySelect}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import CompanySearchModal from '../../components/Register/CompanySearchModal.js';\r\n\r\n// // API BASE URL 설정\r\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://api.bestimate.co.kr';\r\n\r\n// const Register = () => {\r\n//   const [companyType, setCompanyType] = useState('의뢰사');\r\n//   const [businessNumber, setBusinessNumber] = useState('');\r\n//   const [companyName, setCompanyName] = useState('');\r\n//   const [ceo, setCeo] = useState('');\r\n//   const [address, setAddress] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [termsAccepted, setTermsAccepted] = useState(false);\r\n//   const [showModal, setShowModal] = useState(false); // 모달 상태 추가\r\n\r\n//   const handleCompanyTypeChange = (type) => {\r\n//     setCompanyType(type);\r\n//   };\r\n\r\n//   const handleBusinessNumberSearch = () => {\r\n//     setShowModal(true); // 모달 열기\r\n//   };\r\n\r\n//   const handleCompanySelect = (company) => {\r\n//     setBusinessNumber(company.businessNumber);\r\n//     setCompanyName(company.companyName);\r\n//     setCeo(company.ceo);\r\n//     setAddress(company.address);\r\n//     setShowModal(false); // 모달 닫기\r\n//   };\r\n\r\n//   const handleModalClose = () => {\r\n//     setShowModal(false); // 모달 닫기\r\n//   };\r\n\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       // Step 1: 회사 등록 API 호출\r\n//       const companyResponse = await fetch(`${API_BASE_URL}/api/companies`, {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         credentials: 'include',\r\n//         body: JSON.stringify({ companyName, businessNumber, ceo, address }),\r\n//       });\r\n  \r\n//       if (!companyResponse.ok) {\r\n//         const errorData = await companyResponse.json();\r\n//         throw new Error('회사 등록 실패: ' + (errorData.message || '알 수 없는 오류'));\r\n//       }\r\n  \r\n//       const companyData = await companyResponse.json();\r\n  \r\n//       // Step 2: 회사 등록 성공 후 유저 등록 API 호출\r\n//       const userResponse = await fetch(`${API_BASE_URL}/api/users/register`, {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         credentials: 'include',\r\n//         body: JSON.stringify({\r\n//           companyType,\r\n//           email,\r\n//           password,\r\n//           termsAccepted,\r\n//           companyId: companyData.id,\r\n//           businessNumber,\r\n//         }),\r\n//       });\r\n  \r\n//       const userData = await userResponse.json();\r\n  \r\n//       if (userResponse.ok) {\r\n//         alert('회원가입 성공!');\r\n//         window.location.href = '/login'; // 성공 시 로그인 페이지로 리디렉션\r\n//       } else {\r\n//         alert('회원가입 실패: ' + (userData.message || '알 수 없는 오류'));\r\n//       }\r\n//     } catch (err) {\r\n//       alert('오류가 발생했습니다: ' + err.message);\r\n//     }\r\n//   };\r\n\r\n//   // const handleSubmit = async (e) => {\r\n//   //   e.preventDefault();\r\n//   //   try {\r\n//   //     let companyResponse = await fetch(`${API_BASE_URL}/api/companies`, {\r\n//   //       method: 'POST',\r\n//   //       headers: { 'Content-Type': 'application/json' },\r\n//   //       credentials: 'include',\r\n//   //       body: JSON.stringify({ companyName, businessNumber, ceo, address }),\r\n//   //     });\r\n\r\n//   //     if (!companyResponse.ok) {\r\n//   //       throw new Error('Failed to register company');\r\n//   //     }\r\n\r\n//   //     const companyData = await companyResponse.json();\r\n\r\n//   //     const userResponse = await fetch(`${API_BASE_URL}/api/users/register`, {\r\n//   //       method: 'POST',\r\n//   //       headers: { 'Content-Type': 'application/json' },\r\n//   //       credentials: 'include',\r\n//   //       body: JSON.stringify({ companyType, email, password, termsAccepted, companyId: companyData.id, businessNumber }),\r\n//   //     });\r\n\r\n//   //     const userData = await userResponse.json();\r\n\r\n//   //     if (userResponse.ok) {\r\n//   //       alert('Registration successful!');\r\n//   //       window.location.href = '/login';\r\n//   //     } else {\r\n//   //       alert('Registration failed: ' + userData.message);\r\n//   //     }\r\n//   //   } catch (err) {\r\n//   //     alert('An error occurred: ' + err.message);\r\n//   //   }\r\n//   // };\r\n\r\n//   return (\r\n//     <div className=\"register-container\">\r\n//       <h1>회원가입</h1>\r\n//       <form onSubmit={handleSubmit} className=\"register-form\">\r\n//         {/* 기업 유형 선택 */}\r\n//         <div className=\"form-group\">\r\n//           <label>기업 유형</label>\r\n//           <div>\r\n//             <button\r\n//               type=\"button\"\r\n//               className={companyType === '의뢰사' ? 'selected' : ''}\r\n//               onClick={() => handleCompanyTypeChange('의뢰사')}\r\n//             >\r\n//               의뢰사로 가입\r\n//             </button>\r\n//             <button\r\n//               type=\"button\"\r\n//               className={companyType === '공장' ? 'selected' : ''}\r\n//               onClick={() => handleCompanyTypeChange('공장')}\r\n//             >\r\n//               공장으로 가입\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* 사업자등록번호 검색 */}\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"businessNumber\">사업자등록번호</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"businessNumber\"\r\n//             value={businessNumber}\r\n//             onChange={(e) => setBusinessNumber(e.target.value)}\r\n//             required\r\n//           />\r\n//           <button type=\"button\" onClick={handleBusinessNumberSearch}>\r\n//             검색\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* 모달 상태에 따라 모달 표시 */}\r\n//         {showModal && (\r\n//           <CompanySearchModal\r\n//             onClose={handleModalClose}\r\n//             onSelect={handleCompanySelect}\r\n//           />\r\n//         )}\r\n\r\n//         {/* 회사 이름, 대표자, 주소 */}\r\n//         {companyName && (\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"companyName\">기업명</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"companyName\"\r\n//               value={companyName}\r\n//               onChange={(e) => setCompanyName(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n//         )}\r\n\r\n//         {ceo && (\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"ceo\">대표자</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"ceo\"\r\n//               value={ceo}\r\n//               onChange={(e) => setCeo(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n//         )}\r\n\r\n//         {address && (\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"address\">주소</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"address\"\r\n//               value={address}\r\n//               onChange={(e) => setAddress(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* 이메일, 비밀번호 */}\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"email\">이메일</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             id=\"email\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"password\">비밀번호</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {/* 약관 동의 */}\r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             type=\"checkbox\"\r\n//             id=\"termsAccepted\"\r\n//             checked={termsAccepted}\r\n//             onChange={(e) => setTermsAccepted(e.target.checked)}\r\n//             required\r\n//           />\r\n//           <label htmlFor=\"termsAccepted\">이용약관에 동의합니다.</label>\r\n//         </div>\r\n\r\n//         <button type=\"submit\" className=\"register-button\">\r\n//           가입 완료\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n\r\n"],"mappings":"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;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}