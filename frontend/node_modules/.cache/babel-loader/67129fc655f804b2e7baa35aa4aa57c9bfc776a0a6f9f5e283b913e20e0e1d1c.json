{"ast":null,"code":"var _jsxFileName = \"C:\\\\GongSite\\\\frontend\\\\src\\\\Page\\\\Password\\\\ForgetPassword.js\",\n  _s = $RefreshSig$();\n// ForgotPassword.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [codeSent, setCodeSent] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleSendVerificationCode = async () => {\n    try {\n      const response = await fetch('/api/users/send-verification-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Verification code sent to your email.');\n        setCodeSent(true); // 인증 코드가 전송된 후 상태 업데이트\n      } else {\n        setMessage('Failed to send verification code: ' + data.error);\n      }\n    } catch (err) {\n      setMessage('An error occurred: ' + err.message);\n    }\n  };\n  const handleResetPassword = () => {\n    // 비밀번호 재설정 페이지로 이동\n    window.location.href = `/reset-password?email=${encodeURIComponent(email)}&code=${encodeURIComponent(verificationCode)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendVerificationCode,\n      children: \"Send Verification Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), codeSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Verification Code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: verificationCode,\n          onChange: e => setVerificationCode(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetPassword,\n        children: \"Verify Code & Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"8xyOXT/t0Tiv6h8y08MTeF/eAyA=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPassword","_s","email","setEmail","verificationCode","setVerificationCode","codeSent","setCodeSent","message","setMessage","handleSendVerificationCode","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","err","handleResetPassword","window","location","href","encodeURIComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/GongSite/frontend/src/Page/Password/ForgetPassword.js"],"sourcesContent":["// ForgotPassword.js\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [codeSent, setCodeSent] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSendVerificationCode = async () => {\r\n    try {\r\n      const response = await fetch('/api/users/send-verification-code', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage('Verification code sent to your email.');\r\n        setCodeSent(true); // 인증 코드가 전송된 후 상태 업데이트\r\n      } else {\r\n        setMessage('Failed to send verification code: ' + data.error);\r\n      }\r\n    } catch (err) {\r\n      setMessage('An error occurred: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = () => {\r\n    // 비밀번호 재설정 페이지로 이동\r\n    window.location.href = `/reset-password?email=${encodeURIComponent(email)}&code=${encodeURIComponent(verificationCode)}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Forgot Password</h1>\r\n      <div>\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button onClick={handleSendVerificationCode}>Send Verification Code</button>\r\n      {codeSent && (\r\n        <>\r\n          <div>\r\n            <label>Verification Code:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={verificationCode}\r\n              onChange={(e) => setVerificationCode(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button onClick={handleResetPassword}>Verify Code & Reset Password</button>\r\n        </>\r\n      )}\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}