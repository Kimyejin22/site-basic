{"ast":null,"code":"var _jsxFileName = \"C:\\\\GongSite\\\\frontend\\\\src\\\\Page\\\\EstimatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport EstimateForm from '../components/RequestDetail/EstimateForm.js'; // 견적 폼 컴포넌트\nimport RequestDetail from '../components/RequestDetail/RequestDetail.js'; // 요청 세부사항 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://api.bestimate.co.kr'; // Posts 데이터베이스 API 엔드포인트\n\nconst EstimatePage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // URL에서 요청 ID를 가져옴\n  const [request, setRequest] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // useEffect로 데이터 불러오기\n  useEffect(() => {\n    const fetchRequest = async () => {\n      try {\n        const response = await fetch(`${API_URL}/api/posts/${id}`); // ID에 해당하는 포스트 데이터 가져오기\n        if (!response.ok) {\n          throw new Error('Failed to fetch request');\n        }\n        const data = await response.json();\n        setRequest(data); // 요청 데이터를 상태로 저장\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false); // 로딩 완료\n      }\n    };\n    fetchRequest();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this); // 로딩 중일 때 표시\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this); // 에러 발생 시 표시\n  }\n  if (!request) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC694\\uCCAD\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this); // 요청을 찾을 수 없을 때 표시\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"estimate-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"estimate-form-section\",\n      children: /*#__PURE__*/_jsxDEV(EstimateForm, {\n        request: request\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"request-detail-section\",\n      children: /*#__PURE__*/_jsxDEV(RequestDetail, {\n        request: request\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(EstimatePage, \"X3ZvlQGZwgRQaoUDxczCmC0xO8w=\", false, function () {\n  return [useParams];\n});\n_c = EstimatePage;\nexport default EstimatePage;\nvar _c;\n$RefreshReg$(_c, \"EstimatePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","EstimateForm","RequestDetail","jsxDEV","_jsxDEV","API_URL","EstimatePage","_s","id","request","setRequest","loading","setLoading","error","setError","fetchRequest","response","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/GongSite/frontend/src/Page/EstimatePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport EstimateForm from '../components/RequestDetail/EstimateForm.js'; // 견적 폼 컴포넌트\r\nimport RequestDetail from '../components/RequestDetail/RequestDetail.js'; // 요청 세부사항 컴포넌트\r\n\r\nconst API_URL = 'http://api.bestimate.co.kr'; // Posts 데이터베이스 API 엔드포인트\r\n\r\nconst EstimatePage = () => {\r\n  const { id } = useParams(); // URL에서 요청 ID를 가져옴\r\n  const [request, setRequest] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // useEffect로 데이터 불러오기\r\n  useEffect(() => {\r\n    const fetchRequest = async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/posts/${id}`); // ID에 해당하는 포스트 데이터 가져오기\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch request');\r\n        }\r\n        const data = await response.json();\r\n        setRequest(data); // 요청 데이터를 상태로 저장\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false); // 로딩 완료\r\n      }\r\n    };\r\n\r\n    fetchRequest();\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <div>로딩 중...</div>; // 로딩 중일 때 표시\r\n  }\r\n\r\n  if (error) {\r\n    return <div>에러가 발생했습니다: {error}</div>; // 에러 발생 시 표시\r\n  }\r\n\r\n  if (!request) {\r\n    return <div>요청을 찾을 수 없습니다.</div>; // 요청을 찾을 수 없을 때 표시\r\n  }\r\n\r\n  return (\r\n    <div className=\"estimate-page\">\r\n      <div className=\"estimate-form-section\">\r\n        <EstimateForm request={request} />\r\n      </div>\r\n      <div className=\"request-detail-section\">\r\n        <RequestDetail request={request} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EstimatePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}