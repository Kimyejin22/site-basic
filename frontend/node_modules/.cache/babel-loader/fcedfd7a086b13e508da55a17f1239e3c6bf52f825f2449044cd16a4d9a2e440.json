{"ast":null,"code":"var _jsxFileName = \"C:\\\\GongSite\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppRoutes from './routes/routes.js';\nimport Header from './components/header/Header.js'; // Header 컴포넌트 임포트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState({\n    companyType: '' // 기본 값은 빈 문자열\n  });\n\n  // 로그인 후 user 상태를 업데이트하는 함수\n  const handleLogin = userData => {\n    console.log('Received userData:', userData); // 로그인 후 받은 userData를 확인\n    setUser(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(AppRoutes, {\n      user: user,\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/gifVEu89Bz4PIC+AYd7zCH9FVQ=\");\n_c = App;\nexport default App;\n\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router } from 'react-router-dom';\n// import AppRoutes from './routes/routes.js';\n// import Header from './components/header/Header.js';  // Header 컴포넌트 임포트\n\n// const App = () => {\n//   // 기본적으로 공장으로 설정된 user 상태\n//   const [user, setUser] = useState({\n//     companyType: '',  // 초기 상태는 빈 문자열 (로그인 후 변경됨)\n//   });\n\n//   // 로그인 후 user 정보를 업데이트하는 함수\n//   const handleLogin = async (loginData) => {\n//     // 예시로 서버에서 사용자 정보를 받아오는 부분\n//     const response = await fetch('/api/login', {\n//       method: 'POST',\n//       body: JSON.stringify(loginData),\n//       headers: { 'Content-Type': 'application/json' },\n//     });\n\n//     const userData = await response.json();\n\n//     // 서버에서 받은 사용자 정보로 user 상태 업데이트\n//     setUser({\n//       companyType: userData.companyType,  // '공장' 또는 '의뢰사' 값 설정\n//     });\n//   };\n\n//   return (\n//     <Router>\n//       <Header />  {/* 헤더 컴포넌트 추가 */}\n//       {/* user 객체와 handleLogin 함수를 AppRoutes에 전달 */}\n//       <AppRoutes user={user} onLogin={handleLogin} />\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router } from 'react-router-dom';\n// import AppRoutes from './routes/routes.js';\n// import Header from './components/header/Header.js';  // Header 컴포넌트 임포트\n\n// const App = () => {\n\n//   return (\n//     <Router>\n//       <Header />  {/* 헤더 컴포넌트 추가 */}\n//       {/* 라우트를 분리된 파일로 관리 */}\n//       <AppRoutes />\n//     </Router>\n//   );\n// };\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","AppRoutes","Header","jsxDEV","_jsxDEV","App","_s","user","setUser","companyType","handleLogin","userData","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["C:/GongSite/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport AppRoutes from './routes/routes.js';\r\nimport Header from './components/header/Header.js';  // Header 컴포넌트 임포트\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState({\r\n    companyType: '',  // 기본 값은 빈 문자열\r\n  });\r\n\r\n  // 로그인 후 user 상태를 업데이트하는 함수\r\n  const handleLogin = (userData) => {\r\n    console.log('Received userData:', userData);  // 로그인 후 받은 userData를 확인\r\n    setUser(userData);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Header />  {/* 헤더 컴포넌트 추가 */}\r\n      {/* user와 handleLogin을 AppRoutes로 전달 */}\r\n      <AppRoutes user={user} onLogin={handleLogin} />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router } from 'react-router-dom';\r\n// import AppRoutes from './routes/routes.js';\r\n// import Header from './components/header/Header.js';  // Header 컴포넌트 임포트\r\n\r\n// const App = () => {\r\n//   // 기본적으로 공장으로 설정된 user 상태\r\n//   const [user, setUser] = useState({\r\n//     companyType: '',  // 초기 상태는 빈 문자열 (로그인 후 변경됨)\r\n//   });\r\n\r\n//   // 로그인 후 user 정보를 업데이트하는 함수\r\n//   const handleLogin = async (loginData) => {\r\n//     // 예시로 서버에서 사용자 정보를 받아오는 부분\r\n//     const response = await fetch('/api/login', {\r\n//       method: 'POST',\r\n//       body: JSON.stringify(loginData),\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//     });\r\n\r\n//     const userData = await response.json();\r\n\r\n//     // 서버에서 받은 사용자 정보로 user 상태 업데이트\r\n//     setUser({\r\n//       companyType: userData.companyType,  // '공장' 또는 '의뢰사' 값 설정\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <Router>\r\n//       <Header />  {/* 헤더 컴포넌트 추가 */}\r\n//       {/* user 객체와 handleLogin 함수를 AppRoutes에 전달 */}\r\n//       <AppRoutes user={user} onLogin={handleLogin} />\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router } from 'react-router-dom';\r\n// import AppRoutes from './routes/routes.js';\r\n// import Header from './components/header/Header.js';  // Header 컴포넌트 임포트\r\n\r\n// const App = () => {\r\n  \r\n  \r\n//   return (\r\n//     <Router>\r\n//       <Header />  {/* 헤더 컴포넌트 추가 */}\r\n//       {/* 라우트를 분리된 파일로 관리 */}\r\n//       <AppRoutes />\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// export default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,QAAQ,kBAAkB;AAC1D,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,MAAM,MAAM,+BAA+B,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,WAAW,EAAE,EAAE,CAAG;EACpB,CAAC,CAAC;;EAEF;EACA,MAAMC,WAAW,GAAIC,QAAQ,IAAK;IAChCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC,CAAC,CAAE;IAC9CH,OAAO,CAACG,QAAQ,CAAC;EACnB,CAAC;EAED,oBACEP,OAAA,CAACJ,MAAM;IAAAc,QAAA,gBACLV,OAAA,CAACF,MAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,MAAE,eAEZd,OAAA,CAACH,SAAS;MAACM,IAAI,EAAEA,IAAK;MAACY,OAAO,EAAET;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEb,CAAC;AAACZ,EAAA,CAlBID,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAoBT,eAAeA,GAAG;;AAKlB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}